{"version":3,"sources":["../../src/Routes/clientes.js"],"names":["router","require","Router","connection","CreateConnection","get","req","res","cliente","tabla","columnas","orden","desc","query","error","results","fields","respuesta","JSON","parse","stringify","contar","total","console","log","render","post","body","nombre","telefono","direccion","then","redirect","response","id","send","busqueda","check","forEach","json","marca","subcategoria","margen","impuesto","descripcion","minimoStock","vigilar","perecedero","sku","dias_antes_vencimiento","Query","ID_marca","ID_subcategoria","margen_ganancia","porcentaje_impuestos","minimo_stock","SKU","status","end","e","pagina","foranea","tipo","limite","condiciones","valor","almacen","pasillo","estante","fecha_caducidad","fecha_ingreso","cantidad","x","Date","getFullYear","getMonth","getDate","costo","ID_almacen","usernameMov","session","user","marcarSalida","tupla","fecha","filtroFecha","filtroSKU","obj","module","exports"],"mappings":"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","sourcesContent":["const router = require('express').Router();\r\n\r\nimport AddToDatabase from '../ServerComponents/AddToDatabase/AddToDatabase';\r\nimport UpdateDatabase from '../ServerComponents/UpdateDatabase/UpdateDatabase';\r\nimport DeleteFromDatabase from '../ServerComponents/DeleteFromDatabase/DeleteFromDatabase';\r\nimport CreateConnection from '../ServerComponents/CreateConnection/CreateConnection';\r\nimport QueryDatabase from '../ServerComponents/QueryDatabase/QueryDatabase';\r\nimport AddToProduct from '../ServerComponents/AddToDatabase/AddToProduct';\r\nimport CheckForeigns from '../ServerComponents/CheckForeigns/CheckForeigns';\r\nimport UpdateProduct from '../ServerComponents/UpdateDatabase/UpdateProduct';\r\nimport GetMovimientos from '../ServerComponents/GetMovimientos/GetMovimientos';\r\nconst connection = CreateConnection;\r\n\r\n\r\n\r\nrouter.get('/clientes',(req, res) => {\r\n    const cliente = {\r\n        tabla: 'cliente',\r\n        columnas: ['nombre', 'direccion','telefono'],\r\n        orden: 'direccion',\r\n        desc: true\r\n    }\r\n\r\n    QueryDatabase( cliente )//.then((response) => console.log(response))\r\n    connection.query('SELECT * FROM Cliente limit 10 ; SELECT Count(*) AS total from Cliente;', function (error, results, fields) {\r\n        if (error) throw error;\r\n        var respuesta = JSON.parse(JSON.stringify(results[0]));\r\n        var contar = JSON.parse(JSON.stringify(results[1]));\r\n        contar = contar[0].total;\r\n        console.log(respuesta)\r\n        res.render('clientes.hbs', {respuesta, contar});\r\n    })\r\n});\r\n\r\n\r\nrouter.post('/clientes/nuevo', (req, res) => {\r\n    console.log(req.body)\r\n    const cliente = {\r\n        tabla: 'cliente',\r\n        nombre: req.body.nombre,\r\n        telefono: req.body.telefono,\r\n        direccion: req.body.telefono\r\n    }\r\n    AddToDatabase( cliente )\r\n    .then( () => res.redirect('/clientes'))\r\n    .catch( (response) => console.log(response))\r\n    \r\n})\r\n\r\n\r\nrouter.post('/clientes/borrar', (req, res) => {\r\n    console.log(req.body.id)\r\n    const cliente = {\r\n        tabla: 'cliente',\r\n        id: req.body.id\r\n    }\r\n    \r\n    DeleteFromDatabase ( cliente )\r\n    .then(res.send(\"Elimnado!\"))\r\n    .catch( (response) => console.log(response))\r\n})\r\n\r\n\r\n\r\n\r\n\r\n\r\nrouter.post('/clientes/actualizar/', (req,res) => {\r\n    const {nombre, telefono, direccion, id} = req.body;\r\n    console.log(nombre)\r\n    const cliente = {\r\n        tabla: 'cliente',\r\n        id,\r\n        nombre,\r\n        telefono,\r\n        direccion\r\n    }\r\n    UpdateDatabase( cliente )\r\n    .then( () => res.send(\"OK\") )\r\n    .catch( (response) => console.log('response'))\r\n\r\n})\r\n\r\n\r\nrouter.post('/clientes/buscar', (req, res) => {\r\n    const {busqueda, check} = req.body;\r\n    connection.query(`SELECT * from Cliente where ${check} like '%${busqueda}%' `, function (error, results, fields){\r\n        if (error) throw error;\r\n        results.forEach(results => {\r\n            console.log('\\n\\n\\n\\n\\n');\r\n            console.log('Se ha encontrado ' + results.nombre);\r\n        });\r\n        var respuesta = JSON.parse(JSON.stringify(results));\r\n        res.json({ respuesta });\r\n    })\r\n});\r\n\r\n\r\nrouter.post('/productos/editar',async (req, res) => {\r\n    const {marca,subcategoria, margen, impuesto, nombre, descripcion, minimoStock, vigilar, perecedero, sku, dias_antes_vencimiento} = req.body.query;\r\n    const Query = {\r\n        tabla: 'producto',\r\n        ID_marca :              marca,\r\n        ID_subcategoria:        subcategoria, \r\n        margen_ganancia:        margen,\r\n        porcentaje_impuestos:   impuesto,\r\n        nombre :                nombre,\r\n        descripcion:            descripcion,\r\n        vigilar:                vigilar,\r\n        minimo_stock:           minimoStock,\r\n        perecedero:             perecedero,\r\n        SKU:                    sku,\r\n        dias_antes_vencimiento: dias_antes_vencimiento\r\n    }\r\n    console.log(Query)\r\n    await CheckForeigns(Query)\r\n    .then(()=> {\r\n        UpdateProduct( Query )\r\n        .then(console.log('Elemento editado exitosamente'))\r\n        .then(res.send('OK'))\r\n        .catch((error) => console.log(error))\r\n        .catch(() => res.status(404).end())\r\n    })\r\n    .catch((e)=>res.status(404).end());\r\n})\r\n\r\nrouter.post('/productos/nuevo', (req, res) => {\r\n    console.log(req.body.query);\r\n    const {marca,subcategoria, margen, impuesto, nombre, descripcion, minimoStock, vigilar, perecedero, dias_antes_vencimiento} = req.body.query;\r\n    const Query = {\r\n        tabla: 'producto',\r\n        ID_marca :              marca,\r\n        ID_subcategoria:        subcategoria, \r\n        margen_ganancia:        margen,\r\n        porcentaje_impuestos:   impuesto,\r\n        nombre :                nombre,\r\n        descripcion:            descripcion,\r\n        vigilar:                vigilar,\r\n        minimo_stock:           minimoStock,\r\n        perecedero:             perecedero,\r\n        dias_antes_vencimiento: dias_antes_vencimiento\r\n    }\r\n\r\n    if(nombre !== ''){\r\n        \r\n        AddToProduct( Query )\r\n        .then(() => res.send('OK'))\r\n        .then(console.log('Elemento anadido exitosamente'))\r\n        .catch((error) => {\r\n            console.log(error)\r\n            res.status(404).end()\r\n        })\r\n    }else{\r\n        res.status(404).end();\r\n    }\r\n    \r\n    \r\n \r\n})\r\n\r\nrouter.post('/productos/eliminar', (req, res ) => {\r\n    const sku = req.body.query;\r\n    \r\n    const Query = {\r\n        tabla: 'producto',\r\n        id:  sku\r\n    }\r\n    \r\n    DeleteFromDatabase( Query )\r\n    .then(res.send('OK'))\r\n    .catch(e => console.log(e))\r\n})\r\n\r\n\r\nrouter.post('/productos/info', (req, res) => {\r\n    const {pagina, busqueda} = req.body;\r\n    const Query = {\r\n        tabla: 'producto',\r\n        desc: true,\r\n        columnas: ['nombre','sku','ID_subcategoria','ID_marca', 'descripcion', 'margen_ganancia', 'porcentaje_impuestos', 'vigilar', 'minimo_stock', 'perecedero', 'dias_antes_vencimiento'],\r\n        foranea: {\r\n            ID_subcategoria: {\r\n                tabla:      'subcategoria',\r\n                columnas:   ['nombre']\r\n            },\r\n            ID_marca: {\r\n                tabla:      'marca',\r\n                columnas:   ['nombre']\r\n            }\r\n        },\r\n        pagina: pagina\r\n      };\r\n      \r\n    QueryDatabase( Query )\r\n    .then((response) => res.send(response))\r\n    .catch((error) => console.log(error))\r\n})\r\n\r\n\r\nrouter.post('/productos/eliminar', (req, res) => {\r\n    const sku = req.body.query;\r\n    const Query = {\r\n        tabla:  'producto',\r\n        id:         sku\r\n    }\r\n    DeleteFromDatabase(Query)\r\n    .then(res.send('OK'))\r\n    .catch(res.status(404).end())\r\n    \r\n})\r\n\r\nrouter.post('/productos/buscar/',async (req, res) =>{\r\n  \r\n    let {tabla, busqueda, tipo, pagina} = req.body;\r\n\r\n    \r\n    \r\n    const Query = {\r\n        tabla:  tabla,\r\n        columnas: ['nombre','sku','ID_subcategoria','ID_marca', 'descripcion', 'margen_ganancia', 'porcentaje_impuestos', 'vigilar', 'minimo_stock', 'perecedero'],\r\n          foranea: {\r\n              ID_subcategoria: {\r\n                  tabla:      'subcategoria',\r\n                  columnas:   ['nombre']\r\n              },\r\n              ID_marca: {\r\n                  tabla:      'marca',\r\n                  columnas:   ['nombre']\r\n              }\r\n          },\r\n        desc: true, \r\n        limite: 10,\r\n        //PAGE: poner esto en el router de buscar\r\n        pagina: pagina || 0\r\n    }\r\n    \r\n    Query.condiciones = {}\r\n    Query.condiciones[tipo] = busqueda;\r\n    \r\n    QueryDatabase ( Query )\r\n    .then((response) => {\r\n        res.send(JSON.stringify(response));\r\n    })\r\n    .catch(() => res.status(404).end())\r\n})\r\n\r\n\r\n\r\nrouter.post('/productos/sku', (req, res) => {\r\n    \r\n    const {sku} = req.body\r\n    const Query = {\r\n        tabla: 'producto',\r\n        columnas: ['perecedero'],\r\n        condiciones: {\r\n            sku\r\n        }\r\n    }\r\n    QueryDatabase( Query )\r\n    .then((response) => res.json(response.body[0]))\r\n    .catch(error => console.log(error))\r\n})\r\n\r\n\r\nrouter.post('/lotes/nuevo' , (req, res) => {\r\n    let {valor, almacen, pasillo, estante, perecedero, fecha_caducidad, fecha_ingreso, sku, cantidad} = req.body.query\r\n    \r\n    if(!perecedero){ \r\n        const x = new Date();\r\n        fecha_caducidad = `${x.getFullYear()}-${x.getMonth()+1}-${x.getDate()}`\r\n    }\r\n\r\n    const Query = {\r\n        tabla: 'lotes',\r\n        costo: valor,\r\n        ID_almacen: almacen,\r\n        pasillo,\r\n        estante,\r\n        fecha_caducidad,\r\n        fecha_ingreso,\r\n        sku,\r\n        cantidad,\r\n        usernameMov : req.session.user.user\r\n    }\r\n\r\n    AddToDatabase( Query )\r\n    .then(() => res.send('OK'))\r\n    .catch((error) => console.log(error))\r\n})\r\n\r\n\r\n\r\nrouter.post('/lotes/buscar' , (req, res) => {\r\n    let {tabla, busqueda, tipo, pagina} = req.body;\r\n    const Query = {\r\n        tabla:  tabla,\r\n        columnas: ['id', 'sku', 'cantidad', 'fecha_ingreso', 'costo','ID_almacen', 'pasillo','fecha_caducidad'],\r\n        foranea: {\r\n            sku: {\r\n                tabla: 'producto',\r\n                columnas: ['nombre']\r\n            },\r\n            ID_almacen: {\r\n                tabla: 'almacen',\r\n                columnas: ['nombre']\r\n            }\r\n        },\r\n        desc: true, \r\n        limite: 10,\r\n        pagina: pagina || 0\r\n        \r\n    }\r\n    Query.condiciones = {}\r\n    Query.condiciones[tipo] = busqueda;\r\n    Query.condiciones.marcarSalida = '0';\r\n    QueryDatabase( Query )\r\n    .then((response) => {\r\n        \r\n        res.send(JSON.stringify(response));\r\n    })\r\n    .catch((error) => {\r\n        console.log(error)\r\n        res.status(404).end()\r\n    })\r\n})\r\n\r\nrouter.post('/movimientos/buscar' , (req, res) => {\r\n  let {tabla, busqueda, tipo, pagina} = req.body;\r\n  const Query = {\r\n      tabla:  tabla,\r\n      columnas: ['id', 'user', 'SKU', 'tipo', 'fecha', 'cantidad'],\r\n      desc: true, \r\n      limite: 10,\r\n      pagina: pagina || 0\r\n      \r\n  }\r\n  Query.condiciones = {}\r\n  Query.condiciones[tipo] = busqueda;\r\n  QueryDatabase( Query )\r\n  .then((response) => {  \r\n      for( let tupla in response.body ) {\r\n        const fecha = response.body[tupla].fecha;\r\n        response.body[tupla].fecha = `${fecha.getFullYear()}-${fecha.getMonth()+1}-${fecha.getDate()}`;\r\n      }\r\n      res.send(JSON.stringify(response));\r\n  })\r\n  .catch((error) => {\r\n      console.log(error)\r\n      res.status(404).end()\r\n  })\r\n});\r\n\r\nrouter.post('/movimientos/sumas' , (req, res) => {\r\n  \r\n\r\n  console.log(req.body);\r\n  let {filtroFecha, filtroSKU} = req.body;\r\n  if (filtroSKU == '') filtroSKU = 'none';\r\n  const obj = {\r\n    filtroFecha: filtroFecha,\r\n    filtroSKU: filtroSKU || 'none'\r\n  }\r\n\r\n  GetMovimientos(obj)\r\n  .then((response) => {  \r\n      for( let tupla in response.body ) {\r\n        const fecha = response.body[tupla].fecha;\r\n        response.body[tupla].fecha = `${fecha.getFullYear()}-${fecha.getMonth()+1}-${fecha.getDate()}`;\r\n      }\r\n      res.send(JSON.stringify(response));\r\n  })\r\n  .catch((error) => {\r\n      console.log(error)\r\n      res.status(404).end()\r\n  })\r\n});\r\n\r\nmodule.exports = router;\r\n"],"file":"clientes.js"}