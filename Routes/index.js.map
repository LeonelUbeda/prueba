{"version":3,"sources":["../../src/Routes/index.js"],"names":["router","require","Router","connection","CreateConnection","get","req","res","send","error","console","log","UpdateSchema","post","body","obj","sku","cantidad","then","r","e","Query","tabla","columnas","schemaFull","schema","almacen","json","busqueda","condiciones","nombre","tipo","pagina","desc","limite","response","JSON","stringify","status","end","query","user","session","module","exports"],"mappings":"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","sourcesContent":["const router = require('express').Router();\r\nimport ResetDatabase from '../ServerComponents/InitializeDatabase/ResetDatabase';\r\nimport QueryDatabase from '../ServerComponents/QueryDatabase/QueryDatabase'\r\nimport SchemaQuery from '../ServerComponents/HandleSchema/SchemaQuery';\r\nimport DefaultDatabase from '../ServerComponents/InitializeDatabase/DefaultDatabase';\r\nimport DeleteFromDatabase from '../ServerComponents/DeleteFromDatabase/DeleteFromDatabase';\r\nimport ValidateInput from '../ServerComponents/ValidateInput/ValidateInput';\r\nimport UpdateDatabase from '../ServerComponents/UpdateDatabase/UpdateDatabase';\r\nimport AddToDatabase from '../ServerComponents/AddToDatabase/AddToDatabase';\r\nimport CreateConnection from '../ServerComponents/CreateConnection/CreateConnection';\r\nimport {join} from 'path'\r\nimport GenerateSKU from '../ServerComponents/GenerateSKU/GenerateSKU';\r\nimport AddToProduct from '../ServerComponents/AddToDatabase/AddToProduct';\r\nimport UpdateProduct from '../ServerComponents/UpdateDatabase/UpdateProduct';\r\nimport CheckForeigns from '../ServerComponents/CheckForeigns/CheckForeigns';\r\nconst connection = CreateConnection;\r\nimport crypto from 'crypto-js'\r\nimport GetAlerts from '../ServerComponents/GetAlerts/GetAlerts';\r\nimport GetSchema from '../ServerComponents/HandleSchema/GetSchema'\r\nimport LotesTakeOut from '../ServerComponents/LotesTakeOut/LotesTakeOut';\r\nSchemaQuery();\r\n\r\nrouter.get('/hola',(req, res) => {\r\n  \r\n})\r\n\r\n/* ----- Inicializar Database -----*/\r\nrouter.get('/db/reset', ( req, res ) => {\r\n  try {\r\n    ResetDatabase();\r\n    res.send('xd');\r\n  } catch (error) {\r\n    console.log(error)\r\n  }\r\n});\r\n\r\nrouter.get('/db/default', ( req, res ) => {\r\n  DefaultDatabase();\r\n  res.send('xd');\r\n});\r\n\r\n/* ----- Actualizar Schema ------- */\r\n\r\n\r\nrouter.get('/updateschema', (req, res ) => {\r\n  UpdateSchema();\r\n  res.send('Good!');\r\n});\r\n\r\n\r\n\r\n/* ----- Prueba ---- */\r\nrouter.post('/prueba', (req, res) => {\r\n\r\n  console.log(req.body)\r\n  // const test = {\r\n  //   tabla : 'cliente',\r\n  //   nombre : 'cliente1',\r\n  //   telefono : '111',\r\n  //   direccion : 'Casita'\r\n  // }\r\n  // const test = {\r\n  //   tabla: 'subcategoria',\r\n  //   ID_categoria: 2,\r\n  //   nombre: 'NREL',\r\n  //  }\r\n\r\n   \r\n  const obj = {\r\n    sku: '00100100001',\r\n    cantidad: 2\r\n  }\r\n\r\n//   const test = {\r\n//     tabla: 'subcategoria',\r\n//       desc: true,\r\n//       columnas: ['nombre','ID_categoria','id'],\r\n//       foranea: {\r\n//         ID_categoria: {\r\n//           tabla: 'categoria',\r\n//           columnas: ['nombre']\r\n//         }\r\n//       },\r\n//     condiciones : {\r\n//       ID_categoria: 2 \r\n//     },\r\n//     foranea: {\r\n//       ID_categoria: {\r\n//         tabla: 'categoria',\r\n//         columnas: ['nombre', 'ID_categoria']\r\n//       }\r\n//     }\r\n// };\r\n  LotesTakeOut(obj).then(r=>console.log(r)).catch(e=>console.log('xd'));\r\n\r\n// const test = {\r\n//   tabla: ['categoria'],\r\n//   columnas: ['nombre', 'direccion'],\r\n//   condiciones: { id: '2'},\r\n//   columnas: ['nombre', 'id'],\r\n//   limite: 25\r\n// }\r\n\r\n// const product = { tabla: 'producto',\r\n// ID_marca: '2',\r\n// ID_subcategoria: '2',\r\n// margen_ganancia: 0,\r\n// porcentaje_impuestos: 0,\r\n// nombre: 'asd',\r\n// descripcion: 'asdasd',\r\n// vigilar: true,\r\n// minimo_stock: '0',\r\n// SKU: '00200200003' }\r\n\r\n\r\n//console.log(borrar)\r\n//DeleteFromDatabase( borrar )\r\n\r\n\r\n  // QueryDatabase(test)\r\n  // .then((r) => res.json(r))\r\n  // UpdateProduct(product)\r\n  //  .then( response => res.send( response ) )\r\n  //   .catch( response => console.log (response) );\r\n  // res.send(ValidateInput(test));\r\n\r\n  // UpdateDatabase ( test )\r\n  // .catch((e)=> console.log(e));\r\n\r\n  // GetAlerts( )\r\n  //   .then( response => res.send( response ) )\r\n  //   .catch( response => console.log (response) );\r\n  \r\n  // HandleSchema().then(ro=> res.send(ro));\r\n});\r\n\r\n/* ----- Almacen ----- */\r\n\r\n\r\nrouter.post('/getalertas' , (req, res) => {\r\n  GetAlerts()\r\n    .then((r) => res.send(r) )\r\n    .catch((r) => console.log(r));\r\n});\r\n\r\n\r\nrouter.get('/almacen/info', (req, res) => {\r\n  const Query = {\r\n    tabla: 'almacen',\r\n    columnas: ['id','nombre']\r\n  }\r\n  const schemaFull = GetSchema(),\r\n    schema = (({ almacen }) => ({ almacen }))(schemaFull);\r\n  QueryDatabase( Query )\r\n  .then((almacen) => res.json({schema, almacen}))\r\n})\r\n\r\nrouter.post('/almacen/buscar', (req, res) => {\r\n  const Query = {\r\n    tabla: 'almacen',\r\n    columnas: ['id','nombre']\r\n  }\r\n  \r\n  if(req.body.busqueda != '') Query.condiciones = {nombre:req.body.busqueda};\r\n\r\n\r\n  const schemaFull = GetSchema(),\r\n    schema = (({ almacen }) => ({ almacen }))(schemaFull);\r\n  QueryDatabase( Query )\r\n  .then((almacen) => {\r\n    console.log(almacen)\r\n    res.json({schema, almacen})\r\n\r\n  })\r\n})\r\n\r\n\r\n\r\n\r\nrouter.post('/almacen/buscar', (req, res) => {\r\n  let {tabla, busqueda, tipo, pagina} = req.body;\r\n  const Query = {\r\n    tabla:  tabla,\r\n    columnas: ['nombre', 'id'],\r\n    desc: true, \r\n    limite: 10,\r\n    pagina: pagina || 0\r\n    \r\n}\r\n  Query.condiciones = {}\r\n    Query.condiciones[tipo] = busqueda;\r\n    \r\n    QueryDatabase ( Query )\r\n    .then((response) => {\r\n        res.send(JSON.stringify(response));\r\n    })\r\n    .catch(() => res.status(404).end())\r\n\r\n})\r\n\r\nrouter.post('/salida/sacar', (req, res) => {\r\n  const {sku, cantidad} = req.body.query\r\n  const query = {sku, cantidad};\r\n  query.user = req.session.user.user;\r\n  \r\n  LotesTakeOut(query)\r\n  .then(r=>{\r\n    console.log(r); \r\n    res.json(r)\r\n  })\r\n  .catch((e) => {console.log(e);res.status(404).end()})\r\n})\r\nmodule.exports = router;\r\n"],"file":"index.js"}