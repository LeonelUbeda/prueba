{"version":3,"sources":["../../src/Routes/usuarios.js"],"names":["router","require","Router","post","req","res","console","log","body","data","Clasificacion","Lotes","Productos","Reportes","Usuarios","nombre","info","query","tabla","clasificacion","lotes","productos","reportes","then","send","err","status","end","id","Query","response","error","hash","crypto","SHA256","pass","toString","ID_rol","busqueda","tipo","pagina","columnas","desc","json","get","foranea","schemaFull","schema","usuarios","JSON","stringify","users","connection","errror","results","fields","forEach","elemento","index","temp","parse","session_id","module","exports"],"mappings":"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","sourcesContent":[" const router = require('express').Router();\r\nimport QueryDatabase from '../ServerComponents/QueryDatabase/QueryDatabase'\r\nimport connection from '../ServerComponents/CreateConnection/CreateConnection';\r\nimport AddToDatabase from '../ServerComponents/AddToDatabase/AddToDatabase';\r\nimport UpdateDatabase from '../ServerComponents/UpdateDatabase/UpdateDatabase';\r\nimport GetSchema from '../ServerComponents/HandleSchema/GetSchema';\r\nimport crypto from 'crypto-js'\r\nimport DeleteFromDatabase from '../ServerComponents/DeleteFromDatabase/DeleteFromDatabase';\r\n\r\n\r\nrouter.post('/roles/add', (req, res) =>{\r\n    \r\n    console.log(req.body)\r\n    const [Clasificacion, Lotes, Productos, Reportes, Usuarios] = req.body.data;\r\n    const {nombre} = req.body.info;\r\n    const query = {\r\n      tabla : \"roles\",\r\n      clasificacion : Clasificacion,\r\n      lotes : Lotes,\r\n      productos: Productos,\r\n      reportes : Reportes,\r\n      nombre\r\n    };\r\n    \r\n    AddToDatabase(query)\r\n      .then( () => res.send('OK'))\r\n      .catch( (err) => {\r\n        console.log(err);\r\n        res.status(404).end();\r\n      });\r\n})\r\n\r\nrouter.post('/roles/edit', (req, res) =>{\r\n  const [Clasificacion, Lotes, Productos, Reportes, Usuarios] = req.body.data;\r\n  const {nombre, id} = req.body.info;\r\n  \r\n  const Query = {\r\n    tabla:          'roles',\r\n    id,\r\n    clasificacion:  Clasificacion,\r\n    lotes:          Lotes,\r\n    productos:      Productos,\r\n    reportes:       Reportes,\r\n    nombre:         nombre\r\n  }\r\n  if(id !== 1){\r\n    UpdateDatabase( Query )\r\n    .then((response) => {\r\n        console.log(`Se ha actualizado el registro ${id} de la tabla Roles`);\r\n        res.send('Actualizado Exitosamente!');\r\n    })\r\n    .catch((error) => {\r\n        console.log(error)\r\n        res.status(404).end();\r\n    })\r\n  }else{\r\n    res.status(404).end();\r\n  }\r\n    \r\n\r\n})\r\nrouter.post('/usuarios/eliminar', (req, res) => {\r\n  const {tabla, id} = req.body.query\r\n  const Query = {\r\n    tabla: 'usuarios',\r\n    id\r\n  }\r\n\r\n  if(id != 1){\r\n    console.log(Query)\r\n    DeleteFromDatabase(Query)\r\n    .then((response) => res.send('OK'))\r\n    .catch(() => {\r\n      res.status(404).end();\r\n  })\r\n  }else{\r\n    res.status(404).end();\r\n  }\r\n\r\n  \r\n})\r\n\r\nrouter.post('/usuarios/nuevo', (req,res) => {\r\n  const {query} = req.body\r\n  let hash = crypto.SHA256(query.pass)\r\n  query.pass = hash.toString()\r\n  AddToDatabase( query )\r\n  .then((response)  =>  {\r\n    res.send('OK')\r\n  })\r\n  .catch((error) => {\r\n    console.log(error)\r\n  })\r\n})\r\n\r\nrouter.post('/usuarios/editar', (req, res) => {\r\n  const {query} = req.body;\r\n  console.log(query)\r\n  query.tabla = 'usuarios'\r\n  if(query.pass != ''){\r\n    let hash = crypto.SHA256(query.pass)\r\n    query.pass = hash.toString()\r\n  }else{\r\n    delete query.pass;\r\n  }\r\n\r\n  if(!(query.id == 1 && query.ID_rol != 1 ) || (query.id != 1)){\r\n    UpdateDatabase( query )\r\n    .then((response) => {\r\n      console.log('Elemento actualizado!')\r\n      res.send('OK')\r\n    })\r\n    .catch((error) => {\r\n      console.log(error)\r\n      res.status(404).end();\r\n    })\r\n  }else{\r\n    res.status(404).end();\r\n  }\r\n\r\n  \r\n\r\n})\r\n\r\nrouter.post('/usuarios/buscar', (req, res) => {\r\n  \r\n  let {tabla, busqueda, tipo, pagina} = req.body;\r\n\r\n  const Query = {\r\n    tabla: tabla,\r\n    columnas: ['nombre', 'id'],\r\n    desc: true,\r\n    pagina: pagina\r\n  }\r\n\r\n\r\n  QueryDatabase( Query )\r\n  .then((response) => {\r\n    res.json(response)\r\n  })\r\n  .catch((error) => console.log(error))\r\n\r\n\r\n})\r\n\r\n// Ruta que te responde con todos los usuarios\r\nrouter.get('/getusers', (req, res) => {\r\n    const Query = {\r\n        tabla: 'usuarios',\r\n        desc: true,\r\n        columnas: ['id','name','user','ID_rol'],\r\n        foranea: {\r\n          ID_rol: {\r\n            tabla: 'roles',\r\n            columnas: ['nombre']\r\n          }\r\n        }\r\n      };\r\n\r\n\r\n      const schemaFull = GetSchema(),\r\n      schema = (({ usuarios }) => ({ usuarios }))(schemaFull);\r\n\r\n\r\n    QueryDatabase( Query )\r\n    .then((response)=> {\r\n        response = JSON.stringify({users: response, schema})\r\n \r\n        res.json(response)\r\n    })\r\n    .catch((response) => {\r\n        console.log(response)\r\n    })\r\n})\r\n\r\n// Ruta que le pasas un id como body, revisa entre todas las sesiones activas si hay alguna con ese id de ese rol.\r\n// Si es asi, borra esa registro o mejor dicho, esa \"sesion\"\r\nrouter.post('/resetroles', (req, res) => {\r\n    const {id} = req.body;\r\n    connection.query('select * from sessions', function(errror, results, fields){\r\n        results.forEach(function(elemento, index) {\r\n          let temp = JSON.parse(elemento.data)\r\n          if(temp.ID_rol == id){\r\n            connection.query(`DELETE FROM sessions WHERE session_id = '${elemento.session_id}'`, function(error, results, fields){\r\n              if (error) throw error;\r\n            })\r\n          }\r\n        })\r\n    })\r\n    res.send('Rol reseteado')\r\n})\r\n\r\n\r\n\r\n// Ruta que te retorna todos los roles existentes\r\nrouter.get('/getroles', (req, res) => {\r\n\r\n    const Query = {\r\n        tabla: 'roles',\r\n        columnas: ['id', 'nombre', 'productos', 'clasificacion', 'lotes', 'reportes', 'administrador']\r\n    }\r\n\r\n    QueryDatabase( Query )\r\n    .then((response) => {\r\n        res.send(JSON.stringify(response))\r\n    })\r\n})\r\n\r\n\r\n\r\n\r\nmodule.exports = router;\r\n"],"file":"usuarios.js"}