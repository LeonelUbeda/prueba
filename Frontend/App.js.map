{"version":3,"sources":["../../src/Frontend/App.js"],"names":["Vue","use","VueRouter","router","routes","Routes","mode","getUserInfo","info","data","permissions","user","console","log","beforeEach","to","from","next","store","state","IsLogged","response","User","Permissions","matched","some","record","meta","notAuth","render","h","App","$mount"],"mappings":";;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;AAKA;;;;;;;;AAFAA,gBAAIC,GAAJ,CAAQC,qBAAR;;AAOA,IAAMC,MAAM,GAAG,IAAID,qBAAJ,CAAc;AACzBE,EAAAA,MAAM,EAAEC,iBADiB;AAEzBC,EAAAA,IAAI,EAAE;AAFmB,CAAd,CAAf;;AAKA,IAAMC,WAAW;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAG;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAEK,uBAAM,WAAN,CAFL;;AAAA;AAERC,YAAAA,IAFQ;AAEwB;AAFxB,yBAGeA,IAAI,CAACC,IAHpB,EAGPC,WAHO,cAGPA,WAHO,EAGOC,IAHP,cAGOA,IAHP,EAG4B;;AAH5B,6CAIL;AAACD,cAAAA,WAAW,EAAXA,WAAD;AAAcC,cAAAA,IAAI,EAAJA;AAAd,aAJK;;AAAA;AAAA;AAAA;AAMZC,YAAAA,OAAO,CAACC,GAAR;;AANY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAXN,WAAW;AAAA;AAAA;AAAA,GAAjB;;AAUAJ,MAAM,CAACW,UAAP;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAmB,kBAAOC,EAAP,EAAWC,IAAX,EAAiBC,IAAjB;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,iBACZC,kBAAMC,KAAN,CAAYC,QADA;AAAA;AAAA;AAAA;;AAAA;AAAA,mBAEU,uBAAM,WAAN,CAFV;;AAAA;AAEPC,YAAAA,QAFO;;AAGX,gBAAGA,QAAQ,CAACZ,IAAT,IAAiB,KAApB,EAA0B;AACtBS,gCAAMC,KAAN,CAAYC,QAAZ,GAAuB,KAAvB;AACAH,cAAAA,IAAI,CAAC,QAAD,CAAJ;AACH;;AACDA,YAAAA,IAAI;AAPO;AAAA;;AAAA;AAAA;AAAA;AAAA,mBAUc,uBAAM,WAAN,CAVd;;AAAA;AAUHI,YAAAA,SAVG;;AAAA,kBAWJA,SAAQ,CAACZ,IAAT,IAAiB,IAXb;AAAA;AAAA;AAAA;;AAAA;AAAA,mBAY+BF,WAAW,EAZ1C;;AAAA;AAAA;AAYIG,YAAAA,WAZJ,SAYIA,WAZJ;AAYiBC,YAAAA,IAZjB,SAYiBA,IAZjB;AAcHO,8BAAMC,KAAN,CAAYG,IAAZ,GAAmBX,IAAnB,CAdG,CAcqC;;AACxCC,YAAAA,OAAO,CAACC,GAAR,CAAYK,kBAAMC,KAAN,CAAYG,IAAxB;AACAJ,8BAAMC,KAAN,CAAYI,WAAZ,GAA0Bb,WAA1B,CAhBG,CAgBqC;;AACxCQ,8BAAMC,KAAN,CAAYC,QAAZ,GAAuB,IAAvB,CAjBG,CAiBqC;;AACxCH,YAAAA,IAAI;AAlBD;AAAA;;AAAA;AAoBH,gBAAGF,EAAE,CAACS,OAAH,CAAWC,IAAX,CAAgB,UAAAC,MAAM;AAAA,qBAAIA,MAAM,CAACC,IAAP,CAAYC,OAAhB;AAAA,aAAtB,CAAH,EAAkD;AAAE;AAChDX,cAAAA,IAAI;AACP,aAFD,MAEK;AAA+C;AAChDA,cAAAA,IAAI,CAAC,QAAD,CAAJ,CADC,CAC+C;AACnD;;AAxBE;AAAA;AAAA;;AAAA;AAAA;AAAA;AA2BPL,YAAAA,OAAO,CAACC,GAAR;;AA3BO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAnB;;AAAA;AAAA;AAAA;AAAA;AA+BA,IAAIb,eAAJ,CAAQ;AACJ6B,EAAAA,MAAM,EAAE,gBAAAC,CAAC;AAAA,WAAIA,CAAC,CAACC,eAAD,CAAL;AAAA,GADL;AAEJ5B,EAAAA,MAAM,EAANA,MAFI;AAGJe,EAAAA,KAAK,EAALA;AAHI,CAAR,EAIGc,MAJH,CAIU,OAJV","sourcesContent":["import Routes from './Router/index.js'\r\nimport App from './App.vue';\r\nimport 'babel-polyfill';\r\nimport Vue from 'vue';\r\nimport VueRouter from 'vue-router'\r\nimport axios from 'axios'\r\nimport 'babel-polyfill';\r\n\r\nVue.use(VueRouter)\r\n\r\nimport store from './Store/store.js'\r\n\r\n\r\n\r\n\r\nconst router = new VueRouter({\r\n    routes: Routes,\r\n    mode: 'history',\r\n})\r\n\r\nconst getUserInfo = async function(){\r\n    try {\r\n        let info = await axios('/userinfo') // Pide la informacion almacenada en la sesion del backend.\r\n        let {permissions , user} = info.data    // Extrae la informacion de los datos recibidos.\r\n        return {permissions, user}\r\n    } catch (error) {\r\n        console.log(error)\r\n    }\r\n}\r\n\r\nrouter.beforeEach( async (to, from, next) => {\r\n    if(store.state.IsLogged){\r\n        let response = await axios('/islogged')\r\n        if(response.data == false){\r\n            store.state.IsLogged = false;\r\n            next('/login') \r\n        }\r\n        next()\r\n    }else{\r\n        try {\r\n            let response = await axios('/islogged') // Revisa en el backend si existe una sesion activa.\r\n            if(response.data == true){ // Si existe...\r\n                const {permissions, user} = await getUserInfo()\r\n                \r\n                store.state.User = user;                // La almacena en las variables \r\n                console.log(store.state.User)\r\n                store.state.Permissions = permissions;  // temporales globales.\r\n                store.state.IsLogged = true             // Y existe una sesion.\\\r\n                next()\r\n            }else{\r\n                if(to.matched.some(record => record.meta.notAuth)){ // Si en la ruta existe el meta de meta notAuth y si este es verdadero...\r\n                    next()\r\n                }else{                                              // De otra forma...\r\n                    next('/login')                                  // Lo redirige a '/login'\r\n                }\r\n            }\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n})\r\nnew Vue({\r\n    render: h => h(App),\r\n    router,\r\n    store, \r\n}).$mount('#main')\r\n\r\n"],"file":"App.js"}