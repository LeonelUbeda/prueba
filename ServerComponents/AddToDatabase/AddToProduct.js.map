{"version":3,"sources":["../../../src/ServerComponents/AddToDatabase/AddToProduct.js"],"names":["AddToProduct","obj","Promise","resolve","reject","tabla","Error","sku","connection","CreateConnection","then","query","error","results","fields"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;;;;;;;AAEA;;;;;;AAMA,IAAMA,YAAY,GAAG,SAAfA,YAAe,CAAEC,GAAF,EAAW;AAC9B,SAAO,IAAIC,OAAJ;AAAA;AAAA;AAAA;AAAA;AAAA,4BAAa,iBAAQC,OAAR,EAAiBC,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA,oBAIXH,GAAG,CAACI,KAAJ,IAAa,UAJF;AAAA;AAAA;AAAA;;AAAA,oBAMR,IAAIC,KAAJ,CAAU,8BAAV,CANQ;;AAAA;AAAA;AAAA,qBASE,6BAAYL,GAAZ,CATF;;AAAA;AASVM,cAAAA,GATU;AAUhBN,cAAAA,GAAG,CAACM,GAAJ,GAAUA,GAAV,CAVgB,CAahB;;AACMC,cAAAA,UAdU,GAcGC,4BAdH,EAgBhB;;AACA,wDAA0BR,GAA1B,EACCS,IADD,CACO,UAAAC,KAAK;AAAA,uBAAIH,UAAU,CAACG,KAAX,CAAkBA,KAAlB,EAAyB,UAACC,KAAD,EAAQC,OAAR,EAAiBC,MAAjB,EAA4B;AAEnE;AACA,sBAAIF,KAAJ,EAAW;AACTR,oBAAAA,MAAM,CAACQ,KAAD,CAAN;AACD,mBAFD,MAGK;AACH;AACDT,oBAAAA,OAAO,CAACU,OAAD,CAAP;AACA,2BAAO,KAAP;AACA;AACF,iBAXe,CAAJ;AAAA,eADZ;AAjBgB;AAAA;;AAAA;AAAA;AAAA;AAiChBT,cAAAA,MAAM,aAAN;;AAjCgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAb;;AAAA;AAAA;AAAA;AAAA,MAAP;AAqCD,CAtCD;;eAwCeJ,Y","sourcesContent":["import AddToDatabaseCreateQuery from './AddToDatabaseCreateQuery';\r\nimport CreateConnection from './../CreateConnection/CreateConnection';\r\nimport GenerateSKU from '../GenerateSKU/GenerateSKU';\r\n\r\n/**\r\n * La función genérica para añadir un producto a la base de datos.\r\n *\r\n * @param Object Se envia todas las propiedades correspondientes a los campos de la tabla producto, excepto el campo de sku. La propiedad .tabla de ser 'producto para verificar\r\n * @returns\r\n */\r\nconst AddToProduct = ( obj ) => {\r\n  return new Promise( async ( resolve, reject ) => {\r\n    try {\r\n\r\n\r\n      if ( obj.tabla != 'producto' )\r\n      {\r\n        throw new Error('907: No es la tabla producto');\r\n      }\r\n\r\n      const sku = await GenerateSKU(obj);\r\n      obj.sku = sku;\r\n        \r\n\r\n      //Crea el objeto para la conexión\r\n      const connection = CreateConnection;\r\n\r\n      //Realiza la query\r\n      AddToDatabaseCreateQuery( obj )\r\n      .then( query => connection.query( query, (error, results, fields) => {\r\n\r\n        // Si hay un error, devuelve la promesa fallida\r\n        if (error) {\r\n          reject(error);\r\n        }\r\n        else {\r\n          // De lo contrario, devuelve los resultados\r\n         resolve(results);\r\n         return false;\r\n        }\r\n      }));\r\n\r\n    }\r\n    catch (error) {\r\n      reject(error);\r\n    }\r\n    \r\n  });\r\n};\r\n\r\nexport default AddToProduct;\r\n"],"file":"AddToProduct.js"}