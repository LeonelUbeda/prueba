{"version":3,"sources":["../../../src/ServerComponents/AddToDatabase/AddToDatabaseCreateQuery.js"],"names":["AddToDatabaseCreateQuery","obj","Promise","resolve","reject","mysqlQuery","queryCol","queryVal","tabla","Error","mysql","escapeId","columna","escape","substr","length","hasOwnProperty","id"],"mappings":";;;;;;;AAAA;;;;AAEA;;;;;;AAMA,IAAMA,wBAAwB,GAAG,SAA3BA,wBAA2B,CAAEC,GAAF,EAAW;AAC1C,SAAO,IAAIC,OAAJ,CAAY,UAAEC,OAAF,EAAWC,MAAX,EAAuB;AAExC,QAAIC,UAAU,GAAG,cAAjB;AAAA,QACIC,QAAQ,GAAG,EADf;AAAA,QAEIC,QAAQ,GAAG,EAFf,CAFwC,CAMxC;;AACA,QAAIN,GAAG,CAACO,KAAJ,IAAa,IAAb,IAAqBP,GAAG,CAACO,KAAJ,IAAa,KAAtC,EAA8C;AAC5C,YAAM,IAAIC,KAAJ,CAAU,iCAAV,CAAN;AAED,KAVuC,CAYxC;;;AACAJ,IAAAA,UAAU,GAAGA,UAAU,GAAGK,kBAAMC,QAAN,CAAeV,GAAG,CAACO,KAAnB,CAAb,GAAyC,GAAtD,CAbwC,CAexC;;AACA,SAAK,IAAMI,OAAX,IAAsBX,GAAtB,EAA4B;AAC1B,UAAKW,OAAO,IAAI,OAAX,IAAsBA,OAAO,IAAI,IAAjC,IAAyCA,OAAO,IAAI,aAAzD,EAAwE;AACtEN,QAAAA,QAAQ,IAAIM,OAAO,GAAG,IAAtB;AACAL,QAAAA,QAAQ,IAAIG,kBAAMG,MAAN,CAAaZ,GAAG,CAACW,OAAD,CAAhB,IAA6B,IAAzC;AACD;AACF,KArBuC,CAuBxC;;;AACA,QAAIN,QAAQ,IAAI,EAAZ,IAAkBC,QAAQ,IAAI,EAAlC,EAAwC;AACtC,YAAM,IAAIE,KAAJ,CAAU,wCAAV,CAAN;AACD,KA1BuC,CA6BxC;;;AACAH,IAAAA,QAAQ,GAAGA,QAAQ,CAACQ,MAAT,CAAiB,CAAjB,EAAoBR,QAAQ,CAACS,MAAT,GAAgB,CAApC,CAAX;AACAR,IAAAA,QAAQ,GAAGA,QAAQ,CAACO,MAAT,CAAiB,CAAjB,EAAoBP,QAAQ,CAACQ,MAAT,GAAgB,CAApC,CAAX,CA/BwC,CAiCxC;;AACA,QAAKd,GAAG,CAACe,cAAJ,CAAmB,IAAnB,CAAL,EAAgC;AAC9BX,MAAAA,UAAU,aAAMA,UAAN,gBAAuBJ,GAAG,CAACgB,EAA3B,eAAmCX,QAAnC,gCAAiEL,GAAG,CAACgB,EAArE,kCAA+FhB,GAAG,CAACO,KAAnG,6BAA2HP,GAAG,CAACgB,EAA/H,iCAAwJV,QAAxJ,MAAV;AACD,KAFD,MAGK;AACHF,MAAAA,UAAU,aAAMA,UAAN,gBAAsBC,QAAtB,wBAA4CC,QAA5C,MAAV;AACD;;AAGDJ,IAAAA,OAAO,CAACE,UAAD,CAAP;AAED,GA5CM,CAAP;AA8CD,CA/CD;;eAiDeL,wB","sourcesContent":["import mysql from 'mysql';\r\n\r\n/**\r\n * La función genérica para crear la query para añadir un objeto a la base de datos.\r\n *\r\n * @param Object Cada propiedad del objeto representa un conjunto columna/valor. La propiedad tabla esta reservada para el nombre de la tabla\r\n * @returns\r\n */\r\nconst AddToDatabaseCreateQuery = ( obj ) => {\r\n  return new Promise(( resolve, reject ) => {\r\n\r\n    let mysqlQuery = 'INSERT INTO ',\r\n        queryCol = '',\r\n        queryVal = '';\r\n\r\n    // Si no se mando el nombre de la tabla, se retorna falso\r\n    if( obj.tabla == null || obj.tabla == false ) {\r\n      throw new Error('900: Ninguna tabla seleccionada');\r\n\r\n    }\r\n\r\n    // Inicializa la query\r\n    mysqlQuery = mysqlQuery + mysql.escapeId(obj.tabla) + ' ';\r\n\r\n    // Itera sobre cada propiedad del objeto, utilizando el nombre para las columnas y el valor para el mismo valor en las queries.\r\n    for( const columna in obj ) {\r\n      if ( columna != 'tabla' && columna != 'id' && columna != 'usernameMov') {\r\n        queryCol += columna + ', ' ;\r\n        queryVal += mysql.escape(obj[columna]) + ', ';\r\n      }\r\n    }\r\n\r\n    // Si estan vacios los acumuladores, envia error\r\n    if( queryCol == '' || queryVal == ''  ) {\r\n      throw new Error('901: No se mandaron valores a insertar');\r\n    }\r\n\r\n\r\n    // Quita la coma extra\r\n    queryCol = queryCol.substr( 0, queryCol.length-2 );\r\n    queryVal = queryVal.substr( 0, queryVal.length-2 );\r\n\r\n    // La query final. Hace una subquery para el auto_increment\r\n    if ( obj.hasOwnProperty('id') ) {\r\n      mysqlQuery = `${mysqlQuery} ( ${ obj.id }, ${queryCol}) VALUES ( (select ${obj.id} from (select * from ${obj.tabla}) as x order by ${obj.id} desc limit 1) + 1, ${queryVal})`;\r\n    }\r\n    else {\r\n      mysqlQuery = `${mysqlQuery} ( ${queryCol}) VALUES ( ${queryVal})`;\r\n    }\r\n    \r\n\r\n    resolve(mysqlQuery);\r\n\r\n  }); \r\n\r\n};\r\n\r\nexport default AddToDatabaseCreateQuery;\r\n"],"file":"AddToDatabaseCreateQuery.js"}