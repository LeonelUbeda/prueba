{"version":3,"sources":["../../../src/ServerComponents/UpdateDatabase/UpdateProduct.js"],"names":["UpdateProduct","obj","Promise","resolve","reject","SKU","Error","tabla","console","log","connection","CreateConnection","oldSku","oldSub","substr","oldMar","parseInt","ID_subcategoria","ID_marca","mysqlQuery","columnaQuery","columna","mysql","escape","length","query","error","results","fields"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;;;;;;;AAEA;;;;;;AAMA,IAAMA,aAAa,GAAG,SAAhBA,aAAgB,CAAEC,GAAF,EAAW;AAC/B,SAAO,IAAIC,OAAJ;AAAA;AAAA;AAAA;AAAA;AAAA,4BAAa,iBAAOC,OAAP,EAAgBC,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA,oBAGbH,GAAG,CAACI,GAAJ,IAAW,aAHE;AAAA;AAAA;AAAA;;AAAA,oBAIR,IAAIC,KAAJ,CAAU,4CAAV,CAJQ;;AAAA;AAAA,oBAOXL,GAAG,CAACM,KAAJ,IAAa,UAPF;AAAA;AAAA;AAAA;;AAAA,oBASR,IAAID,KAAJ,CAAU,8BAAV,CATQ;;AAAA;AAWhBE,cAAAA,OAAO,CAACC,GAAR,CAAYR,GAAG,CAACI,GAAhB;AAEMK,cAAAA,UAbU,GAaGC,4BAbH,EAcVC,MAdU,GAcDX,GAAG,CAACI,GAdH,EAeVQ,MAfU,GAeDZ,GAAG,CAACI,GAAJ,CAAQS,MAAR,CAAe,CAAf,EAAiB,CAAjB,CAfC,EAgBVC,MAhBU,GAgBDd,GAAG,CAACI,GAAJ,CAAQS,MAAR,CAAe,CAAf,EAAiB,CAAjB,CAhBC;;AAAA,oBAiBZE,QAAQ,CAACH,MAAD,CAAR,IAAoBZ,GAAG,CAACgB,eAAxB,IAA2CD,QAAQ,CAACD,MAAD,CAAR,IAAoBd,GAAG,CAACiB,QAjBvD;AAAA;AAAA;AAAA;;AAAA;AAAA,qBAkBE,6BAAYjB,GAAZ,CAlBF;;AAAA;AAkBdA,cAAAA,GAAG,CAACI,GAlBU;;AAAA;AAsBhB;AACIc,cAAAA,UAvBY,oBAuBYlB,GAAG,CAACM,KAvBhB,YAwBZa,YAxBY,GAwBG,EAxBH,EA0BhB;;AACA,mBAAWC,OAAX,IAAsBpB,GAAtB,EAA4B;AAC1B,oBAAKoB,OAAO,IAAI,OAAhB,EAA2B;AACzBD,kBAAAA,YAAY,cAAOC,OAAP,gBAAoBC,kBAAMC,MAAN,CAAatB,GAAG,CAACoB,OAAD,CAAhB,CAApB,QAAZ;AACD;AACF,eA/Be,CAiChB;;;AAjCgB,oBAkCZD,YAAY,IAAI,EAlCJ;AAAA;AAAA;AAAA;;AAAA,oBAmCR,IAAId,KAAJ,CAAU,+BAAV,CAnCQ;;AAAA;AAsChB;AACAc,cAAAA,YAAY,GAAGA,YAAY,CAACN,MAAb,CAAqB,CAArB,EAAwBM,YAAY,CAACI,MAAb,GAAoB,CAA5C,CAAf,CAvCgB,CAyChB;;AACAL,cAAAA,UAAU,aAAMA,UAAN,cAAoBC,YAApB,0BAAgDR,MAAhD,CAAV,CA1CgB,CA6ChB;;AACAF,cAAAA,UAAU,CAACe,KAAX,CAAkBN,UAAlB,EAA8B,UAACO,KAAD,EAAQC,OAAR,EAAiBC,MAAjB,EAA4B;AACxD,oBAAIF,KAAJ,EAAW;AACTtB,kBAAAA,MAAM,CAACsB,KAAD,CAAN;AACD,iBAFD,MAGK;AACHvB,kBAAAA,OAAO,CAACF,GAAG,CAACI,GAAL,CAAP;AACD;AACF,eAPD;AA9CgB;AAAA;;AAAA;AAAA;AAAA;AAwDhBD,cAAAA,MAAM,aAAN;;AAxDgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAb;;AAAA;AAAA;AAAA;AAAA,MAAP;AA2DD,CA5DD;;eA8DeJ,a","sourcesContent":["import CreateConnection from './../CreateConnection/CreateConnection';\r\nimport mysql from 'mysql';\r\nimport GenerateSKU from '../GenerateSKU/GenerateSKU';\r\n\r\n/**\r\n * La función para actualizar información de un producto. Retorna el SKU resultante despues del update.\r\n *\r\n * @param Object Se manda el object con los parametros a actualizar. El .tabla esta reservado para el nombre de la tabla. Se debe de mandar el .SKU\r\n * @returns {String} SKU\r\n */\r\nconst UpdateProduct = ( obj ) => {\r\n  return new Promise( async( resolve, reject ) => {\r\n    try {\r\n      // Si se intenta modificar el registro 0, da un error\r\n      if(obj.SKU == '00000000000') {\r\n        throw new Error('904: No pueden editar el registro con ID 0');\r\n      }\r\n\r\n      if ( obj.tabla != 'producto' )\r\n      {\r\n        throw new Error('907: No es la tabla producto');\r\n      }\r\n      console.log(obj.SKU);\r\n\r\n      const connection = CreateConnection,\r\n            oldSku = obj.SKU,\r\n            oldSub = obj.SKU.substr(0,3),\r\n            oldMar = obj.SKU.substr(3,3);\r\n      if (parseInt(oldSub) != obj.ID_subcategoria || parseInt(oldMar) != obj.ID_marca ) {\r\n        obj.SKU = await GenerateSKU(obj);\r\n      }\r\n      \r\n\r\n      // Inicializa la query con el update\r\n      let mysqlQuery = `update ${ obj.tabla } set `,\r\n          columnaQuery = '';\r\n\r\n      // Itera sobre todos los atributos a actualizar\r\n      for( const columna in obj ) {\r\n        if ( columna != 'tabla'  ) {\r\n          columnaQuery += `${columna} = ${mysql.escape(obj[columna])} , `;\r\n        }\r\n      }\r\n\r\n      // Si no encontro ningun atributo, devuelve error con update vacío\r\n      if( columnaQuery == '' ) {\r\n        throw new Error('905: Mandaron un update vacío');\r\n      }\r\n\r\n      // Quita la coma extra al final\r\n      columnaQuery = columnaQuery.substr (0, columnaQuery.length-2);\r\n\r\n      // Une la query inicial, los atributos a actualizar, y la condicion where del ID\r\n      mysqlQuery = `${mysqlQuery} ${columnaQuery} where SKU = ${oldSku}`;\r\n\r\n\r\n      //Realiza la query. Si no hay error, resuelve con los resultados\r\n      connection.query( mysqlQuery, (error, results, fields) => {\r\n        if (error) {\r\n          reject(error);\r\n        }\r\n        else {\r\n          resolve(obj.SKU);\r\n        }\r\n      });\r\n    }\r\n    catch (error) {\r\n      reject(error);\r\n    }\r\n  });\r\n}\r\n\r\nexport default UpdateProduct;\r\n"],"file":"UpdateProduct.js"}