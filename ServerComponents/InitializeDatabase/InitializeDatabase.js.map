{"version":3,"sources":["../../../src/ServerComponents/InitializeDatabase/InitializeDatabase.js"],"names":["InitializeDatabase","Promise","resolve","reject","then","mysqlQueryInit","fs","readFileSync","__dirname","mysqlDefault","connection","CreateConnection","query","error","results","fields","console","log","count"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;;;AAEA,IAAMA,kBAAkB,GAAG,SAArBA,kBAAqB,GAAM;AAE/B;AACA,SAAO,IAAIC,OAAJ,CAAY,UAAEC,OAAF,EAAWC,MAAX,EAAuB;AAExC,sCAAiBC,IAAjB,CAAsB,YAAI;AACpB;AACF,UAAMC,cAAc,GAAGC,eAAGC,YAAH,CAAiB,gBAAMC,SAAN,EAAiB,8BAAjB,CAAjB,EAAmE,MAAnE,CAAvB;AAAA,UACAC,YAAY,GAAGH,eAAGC,YAAH,CAAiB,gBAAMC,SAAN,EAAkB,mCAAlB,CAAjB,EAAyE,MAAzE,CADf;AAAA,UAEAE,UAAU,GAAGC,4BAFb;;AAQFD,MAAAA,UAAU,CAACE,KAAX,CAAiBP,cAAjB,EAAiC,UAACQ,KAAD,EAAQC,OAAR,EAAiBC,MAAjB,EAA4B;AAC3DC,QAAAA,OAAO,CAACC,GAAR,CAAY,8BAAZ,EAD2D,CAE3D;;AACA,YAAIJ,KAAJ,EAAW;AACTV,UAAAA,MAAM,CAACU,KAAD,CAAN;AACA,iBAAO,IAAP;AACD;;AACDH,QAAAA,UAAU,CAACE,KAAX,2CAA2D,UAACC,KAAD,EAAQC,OAAR,EAAiBC,MAAjB,EAA4B;AAErF;AACA,cAAIF,KAAJ,EAAW;AACTV,YAAAA,MAAM,CAACU,KAAD,CAAN;AACA,mBAAO,IAAP;AACD;;AAGD,cAAKC,OAAO,CAAC,CAAD,CAAP,CAAWI,KAAX,IAAoB,CAAzB,EAA6B;AAC3BR,YAAAA,UAAU,CAACE,KAAX,CAAiBH,YAAjB,EAA+B,UAACI,KAAD,EAAQC,OAAR,EAAiBC,MAAjB,EAA4B;AACzDC,cAAAA,OAAO,CAACC,GAAR,CAAY,kCAAZ,EADyD,CAEzD;;AACA,kBAAIJ,KAAJ,EAAW;AACTV,gBAAAA,MAAM,CAACU,KAAD,CAAN;AACA,uBAAO,IAAP;AACD;;AAEDX,cAAAA,OAAO,CAACY,OAAD,CAAP;AAED,aAVD;AAWAE,YAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;AACD,WAbD,MAcK;AACHf,YAAAA,OAAO,CAACY,OAAD,CAAP;AACD;AAEF,SA3BD;AA8BD,OArCD;AAwCD,KAlDD,WAmDQ,UAAAD,KAAK,EAAI;AAAC,YAAMA,KAAN;AAAY,KAnD9B;AAqDD,GAvDM,CAAP;AAwDD,CA3DD;;eA6Deb,kB","sourcesContent":["import { join } from 'path';\r\nimport fs from 'fs';\r\nimport CreateConnection from '../CreateConnection/CreateConnection';\r\nimport CreateDatabase from './CreateDatabase';\r\n\r\nconst InitializeDatabase = () => {\r\n  \r\n  // Crea la promesa para inicializar la base datos\r\n  return new Promise(( resolve, reject ) => {\r\n\r\n    CreateDatabase().then(()=>{\r\n          //Se crea el string de la query con el archivo InitDB.sql y el objeto de a conexion\r\n        const mysqlQueryInit = fs.readFileSync( join( __dirname, '../../ServerFiles/InitDB.sql'), \"utf8\"),\r\n        mysqlDefault = fs.readFileSync( join( __dirname,  '../../ServerFiles/DefaultUser.sql'), \"utf8\"),\r\n        connection = CreateConnection;\r\n\r\n        \r\n\r\n\r\n\r\n      connection.query(mysqlQueryInit, (error, results, fields) => {\r\n        console.log('Verificando Base de datos...')\r\n        // Devuelve error si encuentra alguno\r\n        if (error) {\r\n          reject(error);\r\n          return null;\r\n        }\r\n        connection.query(`select count(*) as count from usuarios`, (error, results, fields) => {\r\n\r\n          // Devuelve error si encuentra alguno\r\n          if (error) {\r\n            reject(error);\r\n            return null;\r\n          }\r\n\r\n\r\n          if ( results[0].count == 0 ) {\r\n            connection.query(mysqlDefault, (error, results, fields) => {\r\n              console.log(\"Creando usuarios predefinidos...\")\r\n              // Devuelve error si encuentra alguno\r\n              if (error) {\r\n                reject(error);\r\n                return null;\r\n              }\r\n      \r\n              resolve(results);\r\n      \r\n            });\r\n            console.log(\"Completado!\")\r\n          } \r\n          else {\r\n            resolve(results);\r\n          }\r\n  \r\n        });\r\n\r\n\r\n      });\r\n      \r\n\r\n    })\r\n    .catch( error => {throw error} );\r\n    \r\n  });\r\n}\r\n\r\nexport default InitializeDatabase;\r\n"],"file":"InitializeDatabase.js"}