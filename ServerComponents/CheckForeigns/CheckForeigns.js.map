{"version":3,"sources":["../../../src/ServerComponents/CheckForeigns/CheckForeigns.js"],"names":["CheckForeigns","obj","Promise","resolve","reject","connection","CreateConnection","then","sch","schema","mysqlQuery","campoFirst","count","campo","substr","tabla","foranea","id","query","error","results","fields","check","resultado","borrado","Error"],"mappings":";;;;;;;AAAA;;AACA;;;;;;;;AAEA;;;;;;AAMA,IAAMA,aAAa,GAAG,SAAhBA,aAAgB,CAAEC,GAAF,EAAW;AAC/B,SAAO,IAAIC,OAAJ;AAAA;AAAA;AAAA;AAAA;AAAA,4BAAa,iBAAOC,OAAP,EAAgBC,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGVC,cAAAA,UAHU,GAGGC,4BAHH;AAAA;AAAA,qBAIK,gCACdC,IADc,CACR,UAAAC,GAAG;AAAA,uBAAKA,GAAL;AAAA,eADK,CAJL;;AAAA;AAIVC,cAAAA,MAJU;AAMZC,cAAAA,UANY,GAMC,EAND,EAOZC,UAPY,GAOC,EAPD,EAQZC,KARY,GAQJ,CARI;;AAUhB,mBAASC,KAAT,IAAkBZ,GAAlB,EAAwB;AACtBU,gBAAAA,UAAU,GAAGE,KAAK,CAACC,MAAN,CAAa,CAAb,EAAe,CAAf,CAAb;;AACA,oBAAKH,UAAU,KAAK,KAAf,IAAyBA,UAAU,KAAK,KAAf,IAAwBV,GAAG,CAACc,KAAJ,IAAa,UAAnE,EACA;AACEL,kBAAAA,UAAU,kCAA2BD,MAAM,CAACR,GAAG,CAACc,KAAL,CAAN,CAAkBF,KAAlB,EAAyBG,OAApD,oBAAqEP,MAAM,CAACA,MAAM,CAACR,GAAG,CAACc,KAAL,CAAN,CAAkBF,KAAlB,EAAyBG,OAA1B,CAAN,CAAyCC,EAA9G,gBAAsHhB,GAAG,CAACY,KAAD,CAAzH,QAAV;AACD;AACF;;AAED,kBAAIH,UAAU,KAAK,EAAnB,EAAuB;AACrBP,gBAAAA,OAAO,CAAC,GAAD,CAAP;AACD;;AAEDE,cAAAA,UAAU,CAACa,KAAX,CAAkBR,UAAlB,EAA8B,UAACS,KAAD,EAAQC,OAAR,EAAiBC,MAAjB,EAA4B;AACxD,oBAAIF,KAAJ,EAAW;AACTf,kBAAAA,MAAM,CAACe,KAAD,CAAN;AACD,iBAFD,MAGK;AACH;AACA,sBAAIG,KAAK,GAAG,IAAZ;AAFG;AAAA;AAAA;;AAAA;AAGH,yCAAwBF,OAAxB,8HAAiC;AAAA,0BAAtBG,SAAsB;;AAC/B,0BAAKX,KAAK,IAAI,CAAd,EAAkB;AAChB,4BAAGW,SAAS,CAAC,CAAD,CAAT,CAAaC,OAAb,IAAwB,CAA3B,EAA8B;AAC5BF,0BAAAA,KAAK,GAAG,KAAR;AACD;AACF,uBAJD,MAKK;AACH,4BAAGC,SAAS,CAACC,OAAV,IAAqB,CAAxB,EAA2B;AACzBF,0BAAAA,KAAK,GAAG,KAAR;AACD;AACF;AAEF;AAfE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAgBH,sBAAIA,KAAJ,EAAW;AAETnB,oBAAAA,OAAO;AACR,mBAHD,MAIK;AACHC,oBAAAA,MAAM,CAAC,IAAIqB,KAAJ,CAAU,gDAAV,CAAD,CAAN;AACD;AACF;AACF,eA5BD;AAtBgB;AAAA;;AAAA;AAAA;AAAA;AAsDhBrB,cAAAA,MAAM,aAAN;;AAtDgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAb;;AAAA;AAAA;AAAA;AAAA,MAAP;AAyDD,CA1DD;;eA4DeJ,a","sourcesContent":["import CreateConnection from './../CreateConnection/CreateConnection';\r\nimport HandleSchema from '../HandleSchema/HandleSchema';\r\n\r\n/**\r\n * Para checkear si la tupla a la que se desea apuntar como llave foranea en editar o agregar esta borrada.\r\n *\r\n * @param Object Se manda el object con los parametros a checkear. \r\n * @returns\r\n */\r\nconst CheckForeigns = ( obj ) => {\r\n  return new Promise( async( resolve, reject ) => {\r\n    try {\r\n      //Crea el objeto para la conexiÃ³n e importa el schema\r\n      const connection = CreateConnection,\r\n            schema = await HandleSchema()\r\n            .then( sch =>  sch );\r\n      let mysqlQuery = '',\r\n          campoFirst = '',\r\n          count = 0;\r\n\r\n      for( let campo in obj ) {\r\n        campoFirst = campo.substr(0,3);\r\n        if ( campoFirst === 'ID_' || (campoFirst === 'SKU' && obj.tabla != 'producto'))\r\n        {\r\n          mysqlQuery += `SELECT borrado from ${schema[obj.tabla][campo].foranea} where ${schema[schema[obj.tabla][campo].foranea].id} = ${obj[campo]};\\n`\r\n        }\r\n      }\r\n\r\n      if (mysqlQuery === '') {\r\n        resolve('2');\r\n      }\r\n\r\n      connection.query( mysqlQuery, (error, results, fields) => {\r\n        if (error) {\r\n          reject(error);\r\n        }\r\n        else {\r\n          // checkea si las tablas referenciadas estan borradas\r\n          let check = true;\r\n          for( const resultado of results) {\r\n            if ( count == 1 ) {\r\n              if(resultado[0].borrado == 1) {\r\n                check = false;\r\n              }\r\n            }\r\n            else {\r\n              if(resultado.borrado == 1) {\r\n                check = false;\r\n              }\r\n            }\r\n            \r\n          }\r\n          if (check) {\r\n\r\n            resolve();\r\n          }\r\n          else {\r\n            reject(new Error('Una llave foranea apuntaba a una tupla borrada'));\r\n          }\r\n        }\r\n      });\r\n\r\n    }\r\n    catch (error) {\r\n      reject(error);\r\n    }\r\n  });\r\n}\r\n\r\nexport default CheckForeigns;\r\n"],"file":"CheckForeigns.js"}